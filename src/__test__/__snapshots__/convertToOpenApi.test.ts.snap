// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`convertToOpenApi any-auth 1`] = `
"components:
  securitySchemes:
    foo:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://foo.bar
          scopes:
            read: Grants read access
            write: Grants write access
          x-google-audiences: foo-bar
          x-google-issuer: https://securetoken.google.com/foo-bar
          x-google-jwks_uri: >-
            https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com
    BearerAuth:
      type: http
      scheme: bearer
    BasicAuth:
      type: http
      scheme: basic
    HeaderAuthAuth:
      type: apiKey
      in: header
      name: My-Header
  schemas:
    PostId:
      title: PostId
      type: string
    Author:
      title: Author
      type: object
      properties:
        name:
          type: string
      required:
        - name
    BlogPost:
      title: BlogPost
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PostId'
        title:
          type: string
          example: My Post
        author:
          $ref: '#/components/schemas/Author'
        content:
          type: string
          example: This is my post.
      required:
        - id
        - title
        - author
        - content
openapi: 3.0.1
info:
  title: fern
  version: ''
paths:
  /create:
    post:
      operationId: blog_createPost
      tags:
        - Blog
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostId'
      summary: Create Blog Post
      security:
        - BearerAuth: []
        - BasicAuth: []
        - HeaderAuthAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
  /{postId}:
    get:
      operationId: blog_getPost
      tags:
        - Blog
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PostId'
          examples:
            Example1:
              value: 1234abc
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
              examples:
                Example1:
                  value:
                    id: 1234abc
                    title: My Post
                    author:
                      name: Fernie
                    content: This is my post.
"
`;

exports[`convertToOpenApi base-properties 1`] = `
"components:
  securitySchemes:
    foo:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://foo.bar
          scopes:
            read: Grants read access
            write: Grants write access
          x-google-audiences: foo-bar
          x-google-issuer: https://securetoken.google.com/foo-bar
          x-google-jwks_uri: >-
            https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com
  schemas:
    MyObject:
      title: MyObject
      type: object
      properties:
        foo:
          type: string
      required:
        - foo
    MyUnion:
      title: MyUnion
      oneOf:
        - type: object
          properties:
            type:
              type: string
              enum:
                - a
            value:
              type: string
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - b
            - $ref: '#/components/schemas/MyObject'
          required:
            - type
      required:
        - base
      properties:
        base:
          type: integer
openapi: 3.0.1
info:
  title: fern
  version: ''
paths: {}
"
`;

exports[`convertToOpenApi file-upload 1`] = `
"components:
  securitySchemes:
    foo:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://foo.bar
          scopes:
            read: Grants read access
            write: Grants write access
          x-google-audiences: foo-bar
          x-google-issuer: https://securetoken.google.com/foo-bar
          x-google-jwks_uri: >-
            https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com
  schemas: {}
openapi: 3.0.1
info:
  title: fern
  version: ''
paths:
  /create:
    post:
      description: Creates a blog post
      operationId: blog_createPost
      tags:
        - Blog
      parameters: []
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                heroImage:
                  type: string
                  format: binary
"
`;

exports[`convertToOpenApi multiple-environment-urls 1`] = `
"components:
  securitySchemes:
    foo:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://foo.bar
          scopes:
            read: Grants read access
            write: Grants write access
          x-google-audiences: foo-bar
          x-google-issuer: https://securetoken.google.com/foo-bar
          x-google-jwks_uri: >-
            https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com
  schemas: {}
openapi: 3.0.1
info:
  title: fern
  version: ''
paths:
  /:
    post:
      operationId: blog_doThing
      tags:
        - Blog
      parameters: []
      responses:
        '204':
          description: ''
      servers:
        - url: https://foo.buildwithfern.com
        - url: https://foo-dev.buildwithfern.com
          description: i'm dev!
"
`;

exports[`convertToOpenApi test-api 1`] = `
"components:
  securitySchemes:
    foo:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://foo.bar
          scopes:
            read: Grants read access
            write: Grants write access
          x-google-audiences: foo-bar
          x-google-issuer: https://securetoken.google.com/foo-bar
          x-google-jwks_uri: >-
            https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com
  schemas:
    folderNestedType:
      title: folderNestedType
      type: string
    OptionalString:
      title: OptionalString
      type: string
      nullable: true
    AliasOfNestedType:
      title: AliasOfNestedType
      $ref: '#/components/schemas/folderNestedType'
    PostId:
      title: PostId
      type: string
    BlogPost:
      title: BlogPost
      type: object
      description: A blog post
      properties:
        id:
          $ref: '#/components/schemas/PostId'
        type:
          $ref: '#/components/schemas/PostType'
        title:
          type: string
          example: My blog post
        author:
          $ref: '#/components/schemas/Author'
        content:
          type: string
          example: This is my short post!
      required:
        - id
        - type
        - title
        - author
        - content
    PostType:
      title: PostType
      type: string
      enum:
        - LONG
        - SHORT
    Author:
      title: Author
      oneOf:
        - type: object
          properties:
            type:
              type: string
              enum:
                - anonymous
          required:
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - name
            value:
              type: string
          required:
            - type
        - type: object
          properties:
            type:
              type: string
              enum:
                - type
            value:
              $ref: '#/components/schemas/PostType'
          required:
            - type
    PostNotFoundErrorBody:
      title: PostNotFoundErrorBody
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PostId'
      required:
        - id
    CreatePostRequest:
      title: CreatePostRequest
      type: object
      properties:
        title:
          type: string
          example: My Blog
        author:
          $ref: '#/components/schemas/Author'
          description: Author is the writer.
        content:
          type: string
          example: I'm a post
        postType:
          $ref: '#/components/schemas/PostType'
      required:
        - title
        - author
        - content
        - postType
openapi: 3.0.1
info:
  title: fern
  version: ''
paths:
  /create:
    post:
      description: Creates a blog post and returns blog post id.
      operationId: blog_createPost
      tags:
        - Blog
      parameters:
        - name: optionalQueryParam
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/OptionalString'
        - name: x-endpoint-header
          in: header
          description: I'm a header!
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: abc
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostId'
              examples:
                Example1:
                  value: post-id-123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
            examples:
              Example1:
                value:
                  title: My Blog
                  author:
                    type: anonymous
                  content: I'm a post
                  postType: LONG
  /{postId}:
    get:
      description: Gets a blog post.
      operationId: blog_getPost
      tags:
        - Blog
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PostId'
          examples:
            Example1:
              value: post-id-123
        - name: some-query-param
          in: query
          required: true
          schema:
            type: integer
          examples:
            Example1:
              value: 123
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotFoundErrorBody'
              examples:
                Example1:
                  value:
                    id: post-id-123
    post:
      description: Updates a blog post.
      operationId: blog_updatePost
      tags:
        - Blog
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PostId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostId'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotFoundErrorBody'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
servers:
  - url: https://buildwithfern.com
    description: prod
  - url: https://dev.buildwithfern.com
    description: dev
"
`;
